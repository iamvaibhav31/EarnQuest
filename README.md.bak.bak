## Run with Docker

This project includes Docker and Docker Compose configuration for easy local development and deployment.

### Requirements
- Docker (latest version recommended)
- Docker Compose

### Services
- **typescript-app**: Next.js application (Node.js v22.13.1)
  - Exposes port **3000**
- **postgres**: PostgreSQL database
  - Exposes port **5432**

### Environment Variables
- The application expects environment variables in a `.env.local` file. At minimum, set:
  ```
  NEXT_PUBLIC_SUPABASE_URL=[INSERT SUPABASE PROJECT URL]
  NEXT_PUBLIC_SUPABASE_ANON_KEY=[INSERT SUPABASE PROJECT API ANON KEY]
  ```
- The PostgreSQL service uses:
  - `POSTGRES_DB=supabase`
  - `POSTGRES_USER=supabase`
  - `POSTGRES_PASSWORD=supabase`

### Build and Run
1. (Optional) Update `.env.local` with your Supabase credentials.
2. Build and start all services:
   ```bash
   docker compose up --build
   ```
   This will build the Next.js app using Node.js v22.13.1 and start both the app and PostgreSQL database.
3. Access the app at [http://localhost:3000](http://localhost:3000).

### Notes
- The database data is persisted in a Docker volume (`pgdata`).
- The app runs as a non-root user for security.
- The `postgres` service includes a healthcheck to ensure readiness before the app starts.
- If you wish to use a custom `.env.local`, uncomment the `env_file` line in `docker-compose.yaml`.

> For more details on local development, see [Supabase Local Development Docs](https://supabase.com/docs/guides/getting-started/local-development).
